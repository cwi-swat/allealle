{s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,b1_0{v(int)},b1_1{v(int)},b1_2{v(int)},b1_3{v(int)},b1_4{v(int)},b1_5{v(int)},b1_6{v(int)},b1_7{v(int)},b1_8{v(int)},b1_9{v(int)},b1_10{v(int)},b1_11{v(int)},b1_12{v(int)},b1_13{v(int)},b1_14{v(int)},b1_15{v(int)},b1_16{v(int)},b1_17{v(int)},b1_18{v(int)},b1_19{v(int)},b2_0{v(int)},b2_1{v(int)},b2_2{v(int)},b2_3{v(int)},b2_4{v(int)},b2_5{v(int)},b2_6{v(int)},b2_7{v(int)},b2_8{v(int)},b2_9{v(int)},b2_10{v(int)},b2_11{v(int)},b2_12{v(int)},b2_13{v(int)},b2_14{v(int)},b2_15{v(int)},b2_16{v(int)},b2_17{v(int)},b2_18{v(int)},b2_19{v(int)},a1{v(int)},a2{v(int)},a3{v(int)},a4{v(int)},a5{v(int)},a6{v(int)},a7{v(int)},a8{v(int)},a9{v(int)},a10{v(int)},a11{v(int)},a12{v(int)},a13{v(int)},a14{v(int)},a15{v(int)},a16{v(int)},a17{v(int)},a18{v(int)},a19{v(int)}}

State:1          [{<s0>},{<s0>,<s1>,<s2>,<s3>,<s4>,<s5>,<s6>,<s7>,<s8>,<s9>,<s10>,<s11>,<s12>,<s13>,<s14>,<s15>,<s16>,<s17>,<s18>,<s19>}]
InitialState:1   [{<s0>},{<s0>}]
ordering:2       [{},{<s0,s1>,<s1,s2>,<s2,s3>,<s3,s4>,<s4,s5>,<s5,s6>,<s6,s7>,<s7,s8>,<s8,s9>,<s9,s10>,<s10,s11>,<s11,s12>,<s12,s13>,<s13,s14>,<s14,s15>,<s15,s16>,<s16,s17>,<s17,s18>,<s18,s19>}]
Balance:1        [{<b1_0>,<b2_0>},{<b1_0>,<b2_0>,<b1_1>,<b2_1>,<b1_2>,<b2_2>,<b1_3>,<b2_3>,<b1_4>,<b2_4>,<b1_5>,<b2_5>,<b1_6>,<b2_6>,<b1_7>,<b2_7>,<b1_8>,<b2_8>,<b1_9>,<b2_9>,<b1_10>,<b2_10>,<b1_11>,<b2_11>,<b1_12>,<b2_12>,<b1_13>,<b2_13>,<b1_14>,<b2_14>,<b1_15>,<b2_15>,<b1_16>,<b2_16>,<b1_17>,<b2_17>,<b1_18>,<b2_18>,<b1_19>,<b2_19>}]
balance1:2       [{},{<s0,b1_0>,<s1,b1_1>,<s2,b1_2>,<s3,b1_3>,<s4,b1_4>,<s5,b1_5>,<s6,b1_6>,<s7,b1_7>,<s8,b1_8>,<s9,b1_9>,<s10,b1_10>,<s11,b1_11>,<s12,b1_12>,<s13,b1_13>,<s14,b1_14>,<s15,b1_15>,<s16,b1_16>,<s17,b1_17>,<s18,b1_18>,<s19,b1_19>}]
balance2:2       [{},{<s0,b2_0>,<s1,b2_1>,<s2,b2_2>,<s3,b2_3>,<s4,b2_4>,<s5,b2_5>,<s6,b2_6>,<s7,b2_7>,<s8,b2_8>,<s9,b2_9>,<s10,b2_10>,<s11,b2_11>,<s12,b2_12>,<s13,b2_13>,<s14,b2_14>,<s15,b2_15>,<s16,b2_16>,<s17,b2_17>,<s18,b2_18>,<s19,b2_19>}]
Amount:1         [{},{<a1>,<a2>,<a3>,<a4>,<a5>,<a6>,<a7>,<a8>,<a9>,<a10>,<a11>,<a12>,<a13>,<a14>,<a15>,<a16>,<a17>,<a18>,<a19>}]
amount:2         [{},{<s1,a1>,<s2,a2>,<s3,a3>,<s4,a4>,<s5,a5>,<s6,a6>,<s7,a7>,<s8,a8>,<s9,a9>,<s10,a10>,<s11,a11>,<s12,a12>,<s13,a13>,<s14,a14>,<s15,a15>,<s16,a16>,<s17,a17>,<s18,a18>,<s19,a19>}]

ordering in State->State
balance1 in State->Balance
balance2 in State->Balance
amount   in State->Amount

forall s:State\InitialState | some ordering.s
forall b:Balance | some balance1.b || some balance2.b
forall a:Amount | some amount.a

balance1[InitialState]::v = 100
balance2[InitialState]::v = 100

forall s1:State, s2:State | s1->s2 in ordering =>
  (some balance1[s1] && some balance1[s2] && some balance2[s1] && some balance2[s2] && some amount[s2]) &&
  amount[s2]::v > 0 &&
  (
    (balance1[s1]::v > amount[s2]::v &&
     balance1[s2]::v = (balance1[s1]::v) - (amount[s2]::v) &&
     balance2[s2]::v = (balance2[s1]::v) + (amount[s2]::v)) 
    ||
    (balance2[s1]::v > amount[s2]::v &&
     balance1[s2]::v = (balance1[s1]::v) + (amount[s2]::v) &&
     balance2[s2]::v = (balance2[s1]::v) - (amount[s2]::v))    
  )

exists s:State | balance1[s]::v = 200