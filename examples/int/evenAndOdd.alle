Num (1 :: val:int) <= {<a,?>,<b,?>,<c,?>,<d,?>}
Even(1)            <={<a>,<b>,<c>,<d>}
Odd (1)            <={<a>,<b>,<c>,<d>}
twice (2)          <={<a,b>,<a,c>,<a,d>,<a,e>,<b,a>,<b,c>,<b,d>,<b,e>,<c,a>,<c,b>,<c,e>,<d,a>,<d,b>,<d,c>,<d,e>,<e,a>,<e,b>,<e,c>,<e,d>}

Even in Num
Odd in Num

Num::val > 0 && Num::val < 50

no Even&Odd
Even+Odd = Num

distinct(Num::val)
 
forall n:Num | ((n::val % 2) = 0) <=> n in Even

twice = {n1: Num, n2:Num\n1 | n2::val = n1::val * 2}
#twice >= 2
