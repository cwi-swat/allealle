{n1,n2,ce1(int),ce2(int),ce3(int),ce4(int)}

N:1[{},{<n1>,<n2>}]
C:1[{},{<ce1>,<ce2>,<ce3>,<ce4>}]
grid:3[{},{<n1,n1,ce1>,<n1,n2,ce2>,<n2,n1,ce3>,<n2,n2,ce4>}]

grid in N->N->C
forall c:C | some grid.c
forall n1:N, n2:N | some grid[n1][n2]  

C > 0 && C < 3

//forall n1:N, n2:N | not (exists n3:N\n2 | grid[n1][n2] = grid[n1][n3]) // grid[n1][n2] != grid[n1][N\n2]
//forall n1:N, n2:N, n3:N\n2 | grid[n1][n2] != grid[n1][n3]

forall n1:N, n2:N | grid[n1][n2] != grid[n1][N\n2]
forall n1:N, n2:N | grid[n1][n2] != grid[N\n1][n2]