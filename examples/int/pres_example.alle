Person (pId:id, age:int, height:int)   <= {<p1,?,178>,<p2,37,187>,<p3,59,164>,<p4,42,195>}

Nrs (totalHeight:int)                   = {<?>}
Married (pId:id, to:id, nrOfYears:int) <= {<p1,p1,?>..<p4,p4,?>}

∀ p ∈ Person | some p where (age >= 18 && height > 100 && height < 275)  
some (Nrs ⨯ Person[sum(height) as total]) where totalHeight = total

// All the persons that are married must exist
Married[pId,to] ⊆ Person[pId] ⨯ Person[pId][pId as to] 
// Nobody is married to him or herself
∀ m ∈ Married | no m where pId = to
// You can't be married for a negative number of years
∀ m ∈ Married | some m where nrOfYears >= 0
// If I am married to you, you are married to me
Married[pId as to,to as pId] ⊆ Married
// You can be married to at most one other person
∀ p ∈ Person | lone p ⨝ Married

objectives: maximize Person[count() as cnt], maximize Married[count() as cnt]