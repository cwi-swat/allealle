Point (1) = {<p1>,<p2>,<p3>}
side (2 :: length:int) <= {<p1,p2,?>,<p1,p3,?>,<p2,p3,?>,<p2,p1,?>,<p3,p1,?>,<p3,p2,?>}

side in Point -> Point

forall p: Point | one p.side && one side.p

// all sides should be between 1 and 9
side::length > 0 && side::length < 20

exists p1:Point, p2:Point\p1, p3:Point\(p1++p2) | let a:p1->p2, b:p2->p3, c:p3->p1 |   
  a++b++c in side &&
  c::length * c::length = (a::length * a::length) + (b::length * b::length)

