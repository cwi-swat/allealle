num (1)              = {<n1>,<n2>,<n3>,<n4>,<n5>,<n6>,<n7>,<n8>,<n9>}
r1 (1)               = {<n1>,<n2>,<n3>}
r2 (1)               = {<n4>,<n5>,<n6>}
r3 (1)               = {<n7>,<n8>,<n9>}
grid (2 :: val:int)  = {<n1,n1,6>,<n1,n2,?>,<n1,n3,?>,<n1,n4,2>,<n1,n5,?>,<n1,n6,?>,<n1,n7,?>,<n1,n8,5>,<n1,n9,?>,<n2,n1,?>,<n2,n2,1>,<n2,n3,8>,<n2,n4,?>,<n2,n5,6>,<n2,n6,?>,<n2,n7,?>,<n2,n8,2>,<n2,n9,?>,<n3,n1,?>,<n3,n2,?>,<n3,n3,3>,<n3,n4,?>,<n3,n5,?>,<n3,n6,?>,<n3,n7,4>,<n3,n8,?>,<n3,n9,?>,<n4,n1,?>,<n4,n2,?>,<n4,n3,?>,<n4,n4,6>,<n4,n5,?>,<n4,n6,7>,<n4,n7,8>,<n4,n8,?>,<n4,n9,?>,<n5,n1,4>,<n5,n2,?>,<n5,n3,2>,<n5,n4,?>,<n5,n5,5>,<n5,n6,?>,<n5,n7,?>,<n5,n8,?>,<n5,n9,?>,<n6,n1,?>,<n6,n2,?>,<n6,n3,?>,<n6,n4,9>,<n6,n5,?>,<n6,n6,8>,<n6,n7,?>,<n6,n8,?>,<n6,n9,?>,<n7,n1,5>,<n7,n2,?>,<n7,n3,4>,<n7,n4,?>,<n7,n5,9>,<n7,n6,?>,<n7,n7,3>,<n7,n8,?>,<n7,n9,?>,<n8,n1,?>,<n8,n2,2>,<n8,n3,?>,<n8,n4,?>,<n8,n5,?>,<n8,n6,?>,<n8,n7,?>,<n8,n8,1>,<n8,n9,4>,<n9,n1,3>,<n9,n2,?>,<n9,n3,?>,<n9,n4,?>,<n9,n5,?>,<n9,n6,5>,<n9,n7,?>,<n9,n8,?>,<n9,n9,7>}

grid::val >= 1 && grid::val <= 9

forall x:num  | distinct((x->num)::val)
forall y:num  | distinct((num->y)::val)

distinct((r1->r1)::val)
distinct((r1->r2)::val)
distinct((r1->r3)::val) 
distinct((r2->r1)::val)
distinct((r2->r2)::val)
distinct((r2->r3)::val) 
distinct((r3->r1)::val)
distinct((r3->r2)::val)
distinct((r3->r3)::val) 