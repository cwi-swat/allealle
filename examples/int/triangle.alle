{p1,p2,p3,l1(int),l2(int),l3(int),l4(int),l5(int),l6(int)}
 
Point:1       [{<p1>,<p2>,<p3>},{<p1>,<p2>,<p3>}]
Length:1      [{},{<l1>,<l2>,<l3>,<l4>,<l5>,<l6>}]
side:3        [{},{<p1,p2,l1>,<p1,p3,l2>,<p2,p3,l3>,<p2,p1,l4>,<p3,p1,l5>,<p3,p2,l6>}]

side in Point -> Point -> Length

forall p: Point | one p.side
forall p1: Point | exists p2: Point | one p1.(side[p2])

forall l: Length | one side.l

// all sides should be between 1 and 9
side.Length > 0 && side.Length < 10

exists a: side, b: side, c:side | (c.Length) * (c.Length) = (a.Length) * (a.Length) + (b.Length) * (b.Length) 

//exists s:side | s.Length = 5
