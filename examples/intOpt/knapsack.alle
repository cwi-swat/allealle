{sack{maxWeight(int)=15, totalWeight(int), totalPrice(int)}, a{price(int)=4, weight(int)=12}, b{price(int)=2, weight(int)=2}, c{price(int)=2, weight(int)=1}, d{price(int)=1, weight(int)=1}, e{price(int)=10, weight(int)=4}}

Sack:1    [{<sack>},{<sack>}]
Package:1 [{<a>,<b>,<c>,<d>,<e>},{<a>,<b>,<c>,<d>,<e>}]
content:2 [{},{<sack,a>,<sack,b>,<sack,c>,<sack,d>,<sack,e>}]

sum(Sack::totalWeight) <= Sack::maxWeight

Sack::totalPrice = sum((Sack.content)::price)
Sack::totalWeight = sum((Sack.content)::weight)

maximize Sack::totalPrice    



//universe {
//  people(id:id) <= {<a>,<b>,<c>};
//  couples(a:id, b:id) >={<a,b>}
//  sack(id:id :: maxWeight:int, totalWeight:int, totalPrice:int) <= {<sac, 15, ?, ?>}
//  package(id:id :: price:int > 0, weight:int): [{<a,4,12>,<b,2,2>,<c,2,1>,<d,1,1>,<e,10,4>}]
//  content(sack:id, pkg:id :: loc:int): [{},{<sack,a,?>,<sack,b,?>,<sack,c,?>,<sack,e>}]
//}
//
//constraints {
//  couples in people->people
   
//  sum(Sack::totalWeight) <= Sack::maxWeight
//
  //sack::totalPrice = sum(sack.content::price)
//  sack::totalWeight = sum(sack.content::weight)
//
//  maximize sum(Sack::totalPrice)    
//}
