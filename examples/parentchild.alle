{p1,p2,p3}
Person:1 [{}, {<p1>,<p2>,<p3>}]
Adam:1 [{<p1>},{<p1>}]
parent:2 [{}, {<p1,p2>,<p1,p3>,<p2,p1>,<p2,p3>,<p3,p1>,<p3,p2>}]
child:2 [{}, {<p1,p2>,<p1,p3>,<p2,p1>,<p2,p3>,<p3,p1>,<p3,p2>}]
sibling:2 [{}, {<p1,p2>,<p1,p3>,<p2,p3>,<p3,p2>,<p2,p1>,<p3,p1>}]

parent in Person -> Person
sibling in Person -> Person
child in Person -> Person
Adam in Person

no parent.Adam
Person in Adam.*parent

forall p:Person | ((not (p == Adam)) => one parent.p)

child == ~parent
//sibling == {p:Person, pp: Person | ((not p == pp) && (p.parent == pp.parent))}
forall p:Person | p.sibling == {pp:Person | p.parent == pp.parent} -- p