Person (pId:id)	              <= {<p1>..<p4>}
Adam (pId:id)	                =  {<p1>}
parent (parent:id, child:id)	  <= {<p1,p1>..<p4,p4>}
anchestor(asc:id, pred:id)    <= {<p1,p1>..<p4,p4>}

Adam ⊆ Person
parent ⊆ [parent/pId]Person ⨯ [child/pId]Person
anchestor ⊆ [asc/pId]Person ⨯ [pred/pId]Person

// Everybody has a parent except Adam
∀ p ∈ Person ∖ Adam | one parent ⨝ [child/pId]p
no parent ⨝ [child/pId]Adam

// Nobody is its own parent
∀ p ∈ Person | ¬ (p = [pId/parent]((parent ⨝ [child/pId]p)[parent])) 

// Nobody is the parent of an anchestor
∀ p ∈ Person | ¬ ([parent/pId]p ⊆ ((^<parent,child>parent) ⨝ [child/pId]p)[parent])

// Everybody is a decendant of Adam
[child/pId]Person ⊆ ([parent/pId]Adam ⨝ *<parent,child>parent)[child]

// Anchestor is the transposed transitive closure of the parent relation (if you are somebodies parent, grandparent, etc you are an anchestor
anchestor = [asc/child,pred/parent](^<parent,child>parent)