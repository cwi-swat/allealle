Person (pId:id)	              <= {<p1>..<p4>}
Adam (pId:id)	                =  {<p1>}
parent (parent:id, child:id)	<= {<p1,p1>..<p4,p4>}
anchestor(asc:id, pred:id)    <= {<p1,p1>..<p4,p4>}

Adam ⊆ Person
parent ⊆ Person[pId as parent] ⨯ Person[pId as child]
anchestor ⊆ Person[pId as asc] ⨯ Person[pId as pred]
 
pred everyoneHasAParent[p: (pId:id)] =
  p ≠ Adam ⇒  one parent ⨝ p[pId as child] 
 
pred nobodyIsItsOwnParent[p: (pId:id)] =
  ¬ (p = (parent ⨝ p[pId as child])[parent->pId]) 
  
pred nobodyIsItsAnchestorsParent[p: (pId:id)] =
  ¬(p[pId as parent] ⊆ (^<parent,child>parent ⨝ p[pId as child])[parent])

pred everybodyIsADecendantOfAdam[] =
  Person[pId as child] ⊆ (Adam[pId as parent] ⨝ *<parent,child>parent)[child]

anchestor = (^<parent,child>parent)[child as asc, parent as pred]  

pred adamHasNoParent[] = 
  no parent[child] ∩ Adam[pId as child]

pred combined[p : (pId:id)] =
  everyoneHasAParent[p] ∧ nobodyIsItsOwnParent[p] ∧ nobodyIsItsAnchestorsParent[p]  
 
///////////////// 

∀ p ∈ Person | combined[p]  
adamHasNoParent[]  
everybodyIsADecendantOfAdam[]