Person (pId:id)	              <= {<p1>..<p4>}
Adam (pId:id)	                =  {<p1>}
parent (parent:id, child:id)	<= {<p1,p1>..<p4,p4>}
anchestor(asc:id, pred:id)    <= {<p1,p1>..<p4,p4>}

Adam ⊆ Person
parent ⊆ Person[pId as parent] ⨯ Person[pId as child]
anchestor ⊆ Person[pId as asc] ⨯ Person[pId as pred]

// Everybody has a parent except Adam
∀ p ∈ Person ∖ Adam | one parent ⨝ p[pId as child]
no parent ⨝ Adam[pId as child]

// Nobody is its own parent
∀ p ∈ Person | ¬ (p = (parent ⨝ p[pId as child])[parent][parent as pId]) 

// Nobody is the parent of an anchestor
∀ p ∈ Person | ¬ (p[pId as parent] ⊆ (^<parent,child>parent ⨝ p[pId as child])[parent])

// Everybody is a decendant of Adam
Person[pId as child] ⊆ (Adam[pId as parent] ⨝ *<parent,child>parent)[child]

// Anchestor is the transposed transitive closure of the parent relation (if you are somebodies parent, grandparent, etc you are an anchestor
anchestor = (^<parent,child>parent)[child as asc, parent as pred]