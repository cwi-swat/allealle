{adam,bassie,adriaan}
Person:1 [{}, {<adam>,<bassie>,<adriaan>}]
Adam:1 [{<adam>},{<adam>}]
parent:2 [{}, {<adam,bassie>,<adam,adriaan>,<bassie,adam>,<bassie,adriaan>,<adriaan,adam>,<adriaan,bassie>}]
child:2 [{}, {<adam,bassie>,<adam,adriaan>,<bassie,adam>,<bassie,adriaan>,<adriaan,adam>,<adriaan,bassie>}]
sibling:2 [{}, {<adam,adam>,<bassie,bassie>,<adriaan,adriaan>,<adam,bassie>,<adam,adriaan>,<bassie,adriaan>,<adriaan,bassie>,<bassie,adam>,<adriaan,adam>}]

parent in Person -> Person
sibling in Person -> Person
child in Person -> Person
Adam in Person

no parent.Adam
Person in Adam.*parent

forall p:Person | ((not (p == Adam)) => one parent.p)

child == ~parent
sibling == {p: Person, pp:Person | parent.p == parent.pp}  \ {p: Person, pp: Person | p == pp}