Pigeon (1) = {<p1>,<p2>,<p3>,<p4>,<p5>,<p6>,<p7>,<p8>,<p9>}
Hole (1)   = {<h1>,<h2>,<h3>,<h4>,<h5>,<h6>,<h7>,<h8>,<h9>}
nest (2)   <= {<p1,h1>,<p1,h2>,<p1,h3>,<p1,h4>,<p1,h5>,<p1,h6>,<p1,h7>,<p1,h8>,<p1,h9>,<p2,h1>,<p2,h2>,<p2,h3>,<p2,h4>,<p2,h5>,<p2,h6>,<p2,h7>,<p2,h8>,<p2,h9>,<p3,h1>,<p3,h2>,<p3,h3>,<p3,h4>,<p3,h5>,<p3,h6>,<p3,h7>,<p3,h8>,<p3,h9>,<p4,h1>,<p4,h2>,<p4,h3>,<p4,h4>,<p4,h5>,<p4,h6>,<p4,h7>,<p4,h8>,<p4,h9>,<p5,h1>,<p5,h2>,<p5,h3>,<p5,h4>,<p5,h5>,<p5,h6>,<p5,h7>,<p5,h8>,<p5,h9>,<p6,h1>,<p6,h2>,<p6,h3>,<p6,h4>,<p6,h5>,<p6,h6>,<p6,h7>,<p6,h8>,<p6,h9>,<p7,h1>,<p7,h2>,<p7,h3>,<p7,h4>,<p7,h5>,<p7,h6>,<p7,h7>,<p7,h8>,<p7,h9>,<p8,h1>,<p8,h2>,<p8,h3>,<p8,h4>,<p8,h5>,<p8,h6>,<p8,h7>,<p8,h8>,<p8,h9>,<p9,h1>,<p9,h2>,<p9,h3>,<p9,h4>,<p9,h5>,<p9,h6>,<p9,h7>,<p9,h8>,<p9,h9>}

nest in Pigeon -> Hole
//forall p1:Pigeon, p2:Pigeon | p1 !== p2 => no (p1.nest & p2.nest)
forall p1:Pigeon, p2:Pigeon\p1 | no (p1.nest & p2.nest)