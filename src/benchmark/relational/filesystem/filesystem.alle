Object (oId: id)  <= {<o1>..<o3>}
Name (nId: id)    <= {<n1>..<n3>}
File (oId: id)    <= {<o1>..<o3>}
Dir (oId: id)     <= {<o1>..<o3>}

entries (oId: id, dId: id) <= {<o1,d1>..<o3,d3>}
parent (oId: id, parent: id) <= {<o1,o1>..<o3,o3>}

Root (oId: id)     = {<o1>}
Cur (oId: id)     <= {<o1>..<o3>}

DirEntry (dId: id) <= {<d1>..<d3>}
entryName(dId:id, nId:id) <= {<d1,n1>..<d3,n3>}
contents (dId:id, oId:id) <= {<d1,o1>..<d3,o3>}

Object = File ∪ Dir
no File ∩ Dir

Root ⊆ Dir
Cur ⊆ Dir
no Root ∩ Cur

one Root
no (Root ⨝ parent)

entries ⊆ Dir ⨯ DirEntry

// parent is a partial function from Dir -> Dir
parent ⊆ Dir ⨯ Dir[oId as parent]
∀ d ∈ Dir | lone d ⨝ parent

// entryName is a function from DirEntry -> Name
entryName ⊆ DirEntry ⨯ Name
∀ d ∈ DirEntry | one d ⨝ entryName

// contents is a function from DirEntry -> Object
contents ⊆ DirEntry ⨯ Object
∀ d ∈ DirEntry | one d ⨝ contents

// All files are part of an directory
∀ f ∈ File | ∃ d ∈ Dir | f ⊆ ((d ⨝ entries)[oId as parentId] ⨝ contents)[oId]

∀ d ∈ Dir | 
  ((d ⨝ parent)[parent][parent as oId] = ((d ⨝ contents)[dId] ⨝ entries)[oId]) ∧ 
  (∀ e1 ∈ (d ⨝ entries)[dId], e2 ∈ (d ⨝ entries)[dId] | (e1 ⨝ entryName)[nId] = (e2 ⨝ entryName)[nId] ⇒ e1 = e2) ∧ 
  (¬(d ⊆ (d ⨝ ^parent)[parent][parent as oId])) ∧ 
  ((¬ d = Root) ⇒ Root ⊆ (d ⨝ ^parent)[parent][parent as oId]) 
    
∀ d ∈ DirEntry | one (d ⨝ entries) 

∀ d ∈ Dir ∖ Root | one d ⨝ parent

¬ (∀ d ∈ Dir | lone d ⨝ contents)

expect: sat, #models = 2184